= vm (1) =
:numbered!:
:toc!:

== NAME ==
vm - simplistic, per-user VM management.


== SYNOPSIS ==
*vm* *creat* | *prepare* | *ls* | *slink* | *start* | *ports* | *attach* | *ssh* | *off* | *purge*

When called without any parameters, *vm* prints all available commands.
*vm* '<command>' '-h' prints help for '<command>'.

== DESCRIPTION ==
*vm* is a command line tool for simplistic virtual machine management.

VMs will be run using *qemu*. By default, VMs are headless, backgrounded, and
run in "immutable" ("snapshot") mode - all changes to the VM will be lost after
it is shut down.

=== Access to and from the host system ===

*Networking*

Since VMs run in qemu's "user mode networking" where guest networking is
completely opaque to the host, connections from the host (or
any other machine on the host's network) are impossible. In order to connect
to services of the VM, port forwarding is required - refer to *vm creat* and
the *Files and Directories* section for more information. Ports forwarded by
the VM are dynamically mapped to host ports when the VM is started. *vm ports*
will show the mappings of an active VM.


*File transfer*

The host's root directory is made available via plan9 with the ID 'export'. The
guest may mount it like e.g. 

  mount -t 9p -o trans=virtio export /<whereever> -oversion=9p2000.L,posixacl,cache=none

The command *vm prepare* arranges for a mount on 'host_root' in the guest
system's fstab.

=== vm commands ===

The commands are:
*vm ls* :: List virtual machines.
*vm slink* :: Soft-link an existing VM to a new VM.
*vm start* :: Start a virtual machine.
*vm ports* :: Print the host port -> VM port mapping of an active VM.
*vm attach* :: Attach to the serial console of an active VM.
*vm ssh* :: Run an SSH command (or an interactive shell) on an active VM.
*vm off* :: Power off an active VM.

Also (for VM creation and removal):
*vm creat* :: Create a new VM.
*vm prepare* :: Prepare a fresh VM to work well with *vmscripts*.
*vm purge* :: Remove a VM, including all images and configurations.

For a detailed description of each command refer to the sections below.

=== vm ls ===
*vm ls* '[-a]' :: List all VMs known to *vm*. A flag will be added to the
output for soft-linked or currently active.

The arguments are:

*[-a]* :: List only VMs which are currently active.

Example output:
...................
    user@host $ vm ls
             debian7   (active)
           debian7.8   (active)          (->debian7)
              devuan                     (->debian7)
            fedora21   (active)
                win8
...................


=== vm slink ===
*vm slink* '<source>' '<destination>' :: Soft-link VM '<source>' to new VM
'<dest>'. The VMs will share the same image, so be aware that modifying the
source VM image will affect all VMs soft-linked from that source. 


=== vm start ===
*vm start* '<name>' '[fg]' '[gfx]' '[rw]' -  Start virtual machine '<name>'.

The arguments are:

*<name>* :: Name of the virtual machine to start.
*[fg]* :: Run in foreground. You'll be connected to the VM's serial line.
*[gfx]* :: Enable graphics output.
*[rw]* :: Run in "mutable" mode. All changes to the VM will persist.


=== vm ports ===
*vm ports* '<name>' :: Print the host port -> VM port mapping of active VM
'<name>'.

=== vm attach ===
*vm attach* '<name>' :: Attach to the serial console of active VM '<name>'.


=== vm ssh ===
*vm ssh* '<name>' '[cmd]' :: Run command '[cmd]' on active VM '<name>', or an
interactive shell if '[cmd]' was omitted.


=== vm off ===
*vm off* '<name>' :: Power off active VM '<name>'.


=== vm creat ===
*vm creat* 'name' '[-m]' '[<disk-size-or-path-to-image>]' '[<path-to-iso-image>]' '[<mem-size>]' '[<nr-of-cpus>]' '[<internal-network>]' '[<list-of-forwarded-ports>]'::

Create a new VM. Note that all arguments must be provided in order - except
the [-m] flag, which may be omitted.
All arguments except 'name' are optional; *vm creat* will use default
values if arguments are missing. Alternatively, '-' may be used instead of
an argument to use the default - this may be used to default one parameter
and still set the ones after that.

Issuing *vm creat -h* will print the default values.

The arguments are:

*<name>* ::  unique identifier for this VM
*[-m]* :: Move source disk image and ISO instead of copying.
*[<disk-size-or-path-to-image>]* :: Either the size of the harddisk image
     (followed by K, M, G or T), or path to an existing image (which will be
             copied).
*[<path-to-iso-image>]* :: Path to an ISO image to use with the VM
*[<mem-size>]* :: Amount of memory (followed by M or G).
*[<nr-of-cpus>]* :: Virtual CPUs count.
*[<internal-network>]* :: VM-internal network.
*[<list-of-forwarded-ports>]* :: List of ports forwarded to host ports,
                                 separated by comma (e.g.  '22,80,554')


=== vm prepare ===
*vm prepare* '<name>' :: Prepare VM '<name>' to play well with vmscripts.

This preparation should be done once after the VM was set up. It will generate
SSH keys and add those to the VM's root account, activate serial sonsole I/O
for Linux and grub (so *vm attach* will work) and provides access to the
exported host root inside the VM.


=== vm purge ===
*vm purge* '<name>' :: Remove VM '<name>', including all images and configurations.


== Files and Directories ==

*vmscripts* store all VM images (both disk and ISO) as well as the VM
configuration in a per-VM sub-directory in '~/.vmscripts/'. 

*~/.vmscripts/<name>/<name>.raw* :: The VM disk image
*~/.vmscripts/<name>/<name>.iso* :: The VM ISO (cdrom, dvd) image, if applicable.
*~/.vmscripts/<name>/<name>.cfg* :: The VM configuration, including port mappings.

== AUTHOR ==
vmscripts were written and are maintained by Thilo Alexander Fromm
(kontakt@thilo-fromm.de).

== RESOURCES ==
Github project: <https://github.com/t-lo/vmscripts>


== COPYING ==
Copyright \(C) 2015 Thilo Alexander Fromm. Relased under the terms of the
GNU GPL v3.

